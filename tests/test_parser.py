import pytest
from src.parser import get_vacancy, sort_vacancy


@pytest.fixture
def list_vacancy():
    """
       Фикстура для тестирования. Возвращает список вакансий с их свойствами.

       Возвращаемый список включает:
       - name: Название вакансии
       - url: Ссылка на вакансию
       - salary_from: Минимальная зарплата
       - salary_to: Максимальная зарплата
       - description: Описание вакансии
       """
    return [
        {
            "name": "Водитель-экспедитор",
            "url": "https://hh.ru/vacancy/101840292",
            "salary_from": 110000,
            "salary_to": 0,
            "description": "Развоз продукции по Клиентским точкам в Москве и МО. Соблюдение стандартов и правил"
            " компании."
            " Ведение документооборота, заполнение накладных, путевых и..."
        },
        {
            "name": "Водитель На Рено Логан",
            "url": "https://hh.ru/vacancy/102569427",
            "salary_from": 75000,
            "salary_to": 115000,
            "description": "Развоз сотрудников охраны по постам и объектам. Соблюдение правил дорожного движения."
            " Следить за чистотой автомобиля, техническим состоянием."
        }
    ]


def test_sort_vacancy(list_vacancy):
    """
        Тестирование функции сортировки вакансий.

        Проверяет, что функция sort_vacancy корректно возвращает список вакансий,
        соответствующих заданным критериям поиска.

        Параметры:
        - list_vacancy: Список вакансий для тестирования
        """
    assert sort_vacancy(['10', '100000'], 'Водитель', list_vacancy) == [
        {
            "name": "Водитель-экспедитор",
            "url": "https://hh.ru/vacancy/101840292",
            "salary_from": 110000,
            "salary_to": 0,
            "description": "Развоз продукции по Клиентским точкам в Москве и МО. Соблюдение стандартов и правил"
            " компании."
            " Ведение документооборота, заполнение накладных, путевых и..."
        }
    ]


def test_reed_vacancy():
    """
        Тестирование функции получения информации о вакансии.

        Проверяет, что функция get_vacancy корректно возвращает строку с информацией
        о вакансии с наивысшей зарплатой из переданного списка.

        Возвращаемое значение:
        - Строка с названием вакансии, ее ссылкой, минимальной и максимальной зарплатой,
          а также описанием вакансии.
        """
    assert get_vacancy([
        {'name': 'Разработчик AI-решений (python + no-code платформы)', 'url': 'https://hh.ru/vacancy/99862545',
         'salary_from': 120000, 'salary_to': 200000,
         'description': 'Кроме того, мы разрабатываем высокоэффективных AI-агентов, которые берут на себя ряд рутинных'
         ' задач, таких как обработка данных, составление отчетов...'},
        {'name': 'Младший python-разработчик', 'url': 'https://hh.ru/vacancy/99725937', 'salary_from': 85000,
         'salary_to': 100000,
         'description': 'Разработка внутренних серверных приложений на <highlighttext>Python</highlighttext> для'
         ' автоматизации бизнес-процессов. Организация взаимообмена данными между собственными и сторонними сервисами'
         ' через API. '},
        {'name': 'Junior python-программист в техподдержку (FastAPI)', 'url': 'https://hh.ru/vacancy/102012417',
         'salary_from': 0, 'salary_to': 0,
         'description': 'Доработка интеграций по документации партнера. Улучшение действующих микросервисов.'
         ' Поддержка действующего функционала. Работа с агрегированными запросами SQL/NoSQL. Работа с настройками...'}]
        , 0) == ('Разработчик AI-решений (python + no-code платформы)\n'
                 'https://hh.ru/vacancy/99862545\n'
                 '120000\n'
                 '200000\n'
                 'Кроме того, мы разрабатываем высокоэффективных AI-агентов, которые берут на себя ряд рутинных задач,'
                 ' таких как обработка данных, составление отчетов...')
